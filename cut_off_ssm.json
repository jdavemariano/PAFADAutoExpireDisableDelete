{
  "schemaVersion": "2.2",
  "description": "Command Document Example JSON Template",
  "parameters": {
    "EmailID": {
      "type": "String",
      "description": "Target email to lookup on AD",
      "default": ""
    },
    "Cutoffdate": {
      "type": "String",
      "description": "New expiry date of all matching account",
      "default": ""
    }
  },
  "mainSteps": [
    {
      "action": "aws:runPowerShellScript",
      "name": "PAFADExpireUpdate",
      "inputs": {
        "runCommand": [
          "",
          "$email = '{{EmailID}}'",
          "$expiryDate = '{{Cutoffdate}}'",
          
          "# Check if email is provided",
          "if ([string]::IsNullOrEmpty($email)) {",
          "    Write-Output \"Email cannot be null or empty. Exiting script.\"",
          "    exit",
          "}",
          
          "# Convert expiry date to DateTime object",
          "$expiryDateTime = Get-Date $expiryDate",
          
          "# Get all AD users",
          "$allUsers = Get-ADUser -Filter * -Properties SamAccountName, DisplayName, EmailAddress, AccountExpirationDate, Title",
          
          "# Find all users matching the provided email",
          "$matchingUsers = $allUsers | Where-Object { $_.EmailAddress -eq $email }",
          
          "if ($matchingUsers.Count -eq 0) {",
          "    Write-Output \"No users found with the provided email: $email\"",
          "    exit",
          "}",
          
          "foreach ($user in $matchingUsers) {",
          "    # Display user information before update",
          "    Write-Output \"User Information Before Update for $($user.SamAccountName):\"",
          "    Write-Output \"---------- New Entry ----------\"",
          "    Get-ADUser -Identity $user.SamAccountName -Properties DisplayName, EmailAddress, AccountExpirationDate, Title | Select-Object DisplayName, EmailAddress, AccountExpirationDate, Title",
          "    Write-Output \"--------------------------------\"",
          
          "    # Update \"Title\" attribute to \"Auto Expire\"",
          "    Set-ADUser -Identity $user.SamAccountName -Title \"AutoExpireEnabled\"",

          "    # Update \"Account Expiry\" to \"Cutoffdate1\"",
          "    $newExpiryDateTime = $expiryDateTime.AddDays(1)",
          "    Set-ADUser -Identity $user.SamAccountName -AccountExpirationDate $newExpiryDateTime",
          
          "    # Get updated user information",
          "    $updatedUser = Get-ADUser -Identity $user.SamAccountName -Properties SamAccountName, DisplayName, EmailAddress, AccountExpirationDate, Title",
          
          "    # Display updated user information",
          "    Write-Output \"--------------------------------\"",
          "    Write-Output \"User Information After Update for $($updatedUser.SamAccountName):\"",
          "    Get-ADUser -Identity $user.SamAccountName -Properties DisplayName, EmailAddress, AccountExpirationDate, Title | Select-Object DisplayName, EmailAddress, AccountExpirationDate, Title",
          "    Write-Output \"---------- End Of Entry ----------\"",
          "}",
          
          "# List all usernames with matches on email id and total count",
          "$matchingUsernames = $matchingUsers | Select-Object -ExpandProperty SamAccountName",
          "Write-Output \"Usernames with matches on email id: $($matchingUsernames -join ', ')\"",
          "Write-Output \"Total count of matches: $($matchingUsernames.Count)\"",
          
          "Write-Output \"Script execution complete.\"",
          ""
        ]
      }
    }
  ]
}
